deployer {

  sync-frequency = 10s

  environments {
    kubernetes = [
      {
        name = "kubernetes"
        namespace = "${namespace}"
        ca-cert-data = "${ca_cert_data}"
        token = "${service_account_token}"
        # This is resolved to the IP and port of the Kubernetes API endpoint. The resolution
        # uses environment variables set for each Deployment/Pod.
        master-url = "https://"$${KUBERNETES_SERVICE_HOST}":"$${KUBERNETES_SERVICE_PORT}

        driverless-license-secret = ${driverless_license_secret_name}
        fetcher-secrets {
          key = ${fetcher_client_secret_name}
          cert = ${fetcher_client_secret_name}
          ca = ${fetcher_ca_secret_name}
        }
      }
    ]
  }

  service.bind-port = ${deployer_port}

  storage {
    host = "${storage_host}"
    port = ${storage_port}
  }

  service.tls {
    enabled = true
    ca-cert-path = "/pki/ca/certificate"
    cert-path = "/pki/server/certificate"
    key-path = "/pki/server/key"
  }

  storage.tls {
    enabled = true
    ca-cert-path = "/pki/ca/certificate"
    cert-path = "/pki/client/certificate"
    key-path = "/pki/client/key"
  }

  grafana {
    public-url = "${grafana_public_url}"
    internal-url = "${grafana_internal_url}"
    token = "${grafana_api_token}"
  }

  influxdb.url = "${influxdb_url}"

  model-fetcher.docker-image = "${fetcher_docker_image}"

  monitor.docker-image = "${monitor_docker_image}"

  scorer {
    public-url = "${scorer_public_url}"
    mojo.docker-image = "${scorer_mojo_docker_image}"
  }

  security-proxy {
    docker-image = "${security_docker_image}"
  }

  loglevel = "DEBUG"
}
